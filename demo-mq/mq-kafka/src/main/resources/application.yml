server:
  port: 8761
  servlet:
    context-path: /demo

spring:
  application:
    name: mq-kafka
  kafka:
    #链接路径+端口
    bootstrap-servers: 10.2.6.220:9092
    producer:
      #重试次数
      retries: 0
      # 批量大小
      batch-size: 16384
      # 生产端缓冲区大小
      buffer-memory: 33554432
      # Kafka提供的序列化和反序列化类
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      # 默认的消费组ID
      group-id: spring-mq-kafka
      # 消费者的偏移量将在后台定期提交，默认值为true
      enable-auto-commit: false
      # 提交offset延时(接收到消息后多久提交offset)
#      auto:
#        commit:
#          interval:
#            ms: 1000
      # 当kafka中没有初始offset或offset超出范围时将自动重置offset
      # earliest:重置为分区中最小的offset;
      # latest:重置为分区中最新的offset(消费分区中新产生的数据);
      # none:只要有一个分区不存在已提交的offset,就抛出异常;
      auto-offset-reset: latest
      # Kafka提供的序列化和反序列化类
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        # 消费会话超时时间(超过这个时间consumer没有发送心跳,就会触发rebalance操作)
        session.timeout.ms: 60000
        # 消费请求超时时间
        request.timeout.ms: 120000
    listener:
      # 记录初始化配置
      log-container-config: false
      # 运行的线程数量
      concurrency: 5
      # 手动提交
      ack-mode: manual_immediate